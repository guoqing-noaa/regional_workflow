#!/bin/bash
MACHINE="jet"
ACCOUNT="nrtrr"
RESERVATION="rrfsdet"
EXPT_BASEDIR="/home/rtrr/RTMA"
EXPT_SUBDIR="RTMA_dev1"

if [[ -n $RESERVATION ]] ; then
  ACCOUNT=rtrr
  SERVICE_ACCOUNT=nrtrr
  PARTITION_DEFAULT=kjet
  PARTITION_FCST=kjet
  PARTITION_GRAPHICS=kjet,xjet,tjet,ujet,vjet
  PARTITION_ANALYSIS=kjet
fi

FIXLAM_NCO_BASEDIR=/mnt/lfs4/BMC/nrtrr/RRFS/fix/fix_lam.20210128
FIXgsm=/mnt/lfs4/BMC/nrtrr/RRFS/fix/fix_am.20210128
GWD_HRRRsuite_BASEDIR=/mnt/lfs4/BMC/nrtrr/RRFS/fix/fix_lam.20210128

OBSPATH_NSSLMOSIAC=/public/data/radar/nssl/mrms/conus
FFG_DIR=/public/data/grids/ncep/ffg/grib2
RADARREFL_TIMELEVEL=(0)
FH_DFI_RADAR=""

if [[ $MACHINE == "hera" ]] ; then
  ACCOUNT="wrfruc"
  PARTITION_DEFAULT=""
  PARTITION_FCST=""
  QUEUE_ANALYSIS="batch"

  FIXLAM_NCO_BASEDIR=/scratch1/BMC/zrtrr/RRFS/fix/fix_lam.20210128
  FIXgsm=/scratch1/BMC/zrtrr/RRFS/fix/fix_am.20210128
  GWD_HRRRsuite_BASEDIR=/scratch1/BMC/zrtrr/RRFS/fix/fix_lam.20210128


# for using RAP as boundary and initial
#  EXTRN_MDL_SOURCE_BASEDIR_ICS=/scratch2/BMC/public/data/grids/rap/full/wrfnat/grib2
#  EXTRN_MDL_SOURCE_BASEDIR_LBCS=/scratch2/BMC/public/data/grids/rap/full/wrfnat/grib2
# for using GFS as boundary and initial
  EXTRN_MDL_SOURCE_BASEDIR_ICS=/scratch2/BMC/public/data/grids/gfs/0p25deg/grib2
  EXTRN_MDL_SOURCE_BASEDIR_LBCS=/scratch2/BMC/public/data/grids/gfs/0p25deg/grib2
# observations
  OBSPATH=/scratch2/BMC/public/data/grids/rap/obs
  OBSPATH_NSSLMOSIAC=/scratch2/BMC/public/data/radar/nssl/mrms/conus
  LIGHTNING_ROOT=/scratch2/BMC/public/data/lightning
  ENKF_FCST=/scratch1/NCEPDEV/rstprod/com/gfs/prod
fi

if [[ $MACHINE == "orion" ]] ; then
  ACCOUNT=ztrr
  QUEUE_ANALYSIS="batch"
  FIXLAM_NCO_BASEDIR=/work/noaa/wrfruc/mhu/rrfs/data/fix/fix_lam.20210128
  FIXgsm=/work/noaa/wrfruc/mhu/rrfs/data/fix/fix_am.20210128
  GWD_HRRRsuite_BASEDIR=/work/noaa/wrfruc/mhu/rrfs/data/fix/fix_lam.20210128

fi


VERBOSE="TRUE"

RUN_ENVIR="nco"
PREEXISTING_DIR_METHOD="upgrade"

PREDEF_GRID_NAME=RRFS_CONUS_3km
ADDNL_OUTPUT_GRIDS=( "hrrr" )

TILE_LABELS="CONUS REGIONS"
TILE_SETS="full NE,NC,NW,SE,SC,SW"

DO_DACYCLE="TRUE"
#DO_SURFACE_CYCLE="FALSE"
#DO_SPINUP="FALSE"
#DO_RETRO="TRUE"
#LBCS_ICS_ONLY="TRUE"
#DO_NONVAR_CLDANAL="TRUE"
#DO_REFL2TTEN="FALSE"
#
#-------------------------------------------------------------------------------------
#      GSI Namelist parameters configurable across differnt applications
# if we need to tune one GSI namelist parameter, we can elevate it to a shell variable
# and assign value in config.sh and give it a default value in config_default.sh
# In realtime testing, don't need to regenerate the whole workflow, you can tweak 
# $EXPTDIR/var_defns.sh and $FIX_GSI/gsiparm.anl.sh to make sure the change is
# expected and then put it back into config.sh and config_default.sh
#       (need to follow FORTRAN namelist convetion)
#-------------------------------------------------------------------------------------
#
# &SETUP  and &BKGERR
diag_radardbz=.false.
write_diag_2=.true.
bkgerr_vs=0.125                        #1.0 is default setting
#bkgerr_hzscl=0.373,0.746,1.5         #default setting, no trailing ,
bkgerr_hzscl=0.046625,0.09325,0.1875  #hzscl/8

# &HYBRID_ENSEMBLE
readin_localization=.true.     #if true, it overwrites the "beta1_inv/ens_h/ens_v" setting
beta1_inv=0.5                  #beata_inv is 1-ensemble_wgt
ens_h=20                       #110
ens_v=1                        #3
regional_ensemble_option=1     #1 for GDAS
grid_ratio_fv3=2.0             #fv3 resolution 3km, so analysis=3*2=6km
grid_ratio_ens=3               #analysis 6km, so ensemble=6*3=18km. GDAS ensemble is 20km
i_en_perts_io=1                #0 or 1: original file   3: pre-processed ensembles

# &RAPIDREFRESH_CLDSURF
l_PBL_pseudo_SurfobsT=.false.
l_PBL_pseudo_SurfobsQ=.false
i_use_2mQ4B=0
i_use_2mT4B=0
#-------------------------------------------------------------------------------------
#
BERROR_FN="berror.rtma"      #under $FIX_GSI
ANAVINFO_FN="anavinfo.fv3lam_hrrr"
CONVINFO_FN="convinfo.rtma"
OBERROR_FN="errtable.rtma"
HYBENSINFO_FN="hybens_info.rtma"
AIRCRAFT_REJECT="/home/amb-verif/acars_RR/amdar_reject_lists"
SFCOBS_USELIST="/lfs4/BMC/amb-verif/rap_ops_mesonet_uselists"
#
#
QUILTING="TRUE"
CCPP_PHYS_SUITE="FV3_HRRR"

EXTRN_MDL_ICS_OFFSET_HRS="0"
BOUNDARY_LEN_HRS="1"
BOUNDARY_LONG_LEN_HRS="1"
LBC_SPEC_INTVL_HRS="1"
EXTRN_MDL_LBCS_OFFSET_HRS="0"
EXTRN_MDL_LBCS_SEARCH_OFFSET_HRS="0"

DATE_FIRST_CYCL="20210826"
DATE_LAST_CYCL="20220826"
CYCL_HRS=( "00" "12" )
CYCL_HRS_SPINSTART=("03" "15")
CYCL_HRS_PRODSTART=("99") # RTMA always warm-starts
CYCLEMONTH="8-12"
#CYCLEDAY="1-4"

if [[ $DO_RETRO == "TRUE" ]] ; then

  if [[ $MACHINE == "jet" ]] ; then
    EXTRN_MDL_SOURCE_BASEDIR_ICS=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/hrrr/conus/wrfnat/grib2
    EXTRN_MDL_SOURCE_BASEDIR_LBCS=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/rap/full/wrfnat/grib2
#    EXTRN_MDL_SOURCE_BASEDIR_LBCS=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/gfs/0p25deg/grib2
    OBSPATH=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/obs_rap
    OBSPATH_NSSLMOSIAC=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/reflectivity
    LIGHTNING_ROOT=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/lightning
    ENKF_FCST=/mnt/lfs4/BMC/wrfruc/Ruifang.Li/data/enkf/atm
  fi
  if [[ $MACHINE == "hera" ]] ; then
    EXTRN_MDL_SOURCE_BASEDIR_ICS=/scratch2/BMC/zrtrr/rli/data/hrrr/conus/wrfnat/grib2
    EXTRN_MDL_SOURCE_BASEDIR_LBCS=/scratch2/BMC/zrtrr/rli/data/rap/full/wrfnat/grib2
#    EXTRN_MDL_SOURCE_BASEDIR_LBCS=/scratch2/BMC/zrtrr/rli/data/gfs/0p25deg/grib2
    OBSPATH=/scratch2/BMC/zrtrr/rli/data/obs_rap
    OBSPATH_NSSLMOSIAC=/scratch2/BMC/zrtrr/rli/data/reflectivity
    LIGHTNING_ROOT=/scratch2/BMC/zrtrr/rli/data/lightning
    ENKF_FCST=/scratch2/BMC/zrtrr/rli/data/enkf/atm
  fi
  if [[ $MACHINE == "orion" ]] ; then
    EXTRN_MDL_SOURCE_BASEDIR_ICS=/work/noaa/wrfruc/mhu/rrfs/data/gfs
    EXTRN_MDL_SOURCE_BASEDIR_LBCS=/work/noaa/wrfruc/mhu/rrfs/data/gfs
    OBSPATH=/work/noaa/wrfruc/mhu/rrfs/data/obs_rap
  fi

  if [[ $LBCS_ICS_ONLY == "TRUE" ]]; then
    PREEXISTING_DIR_METHOD="rename"
    INITIAL_CYCLEDEF="${DATE_FIRST_CYCL}1000 ${DATE_LAST_CYCL}2300 12:00:00"
    BOUNDARY_CYCLEDEF="00 00-02,04-08,10-14,16-20,22,23 ${CYCLEDAY} ${CYCLEMONTH} 2021 *"
    BOUNDARY_LONG_CYCLEDEF="${DATE_FIRST_CYCL}0300 ${DATE_LAST_CYCL}2300 06:00:00"
  else
    PREEXISTING_DIR_METHOD="upgrade"
    PROD_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 01:00:00"
    POSTPROC_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 01:00:00"
    POSTPROC_LONG_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 06:00:00"
    if [[ $DO_SPINUP == "TRUE" ]] ; then
      SPINUP_CYCLEDEF="00 03-08,15-20 ${CYCLEDAY} ${CYCLEMONTH} 2021 *"
    fi
  fi
else
  #INITIAL_CYCLEDEF="${DATE_FIRST_CYCL}0300 ${DATE_LAST_CYCL}2300 12:00:00"
  #BOUNDARY_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 06:00:00"
  PROD_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 01:00:00"
  POSTPROC_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 01:00:00"
  POSTPROC_LONG_CYCLEDEF="${DATE_FIRST_CYCL}0000 ${DATE_LAST_CYCL}2300 06:00:00"
  ARCHIVE_CYCLEDEF="${DATE_FIRST_CYCL}0700 ${DATE_LAST_CYCL}2300 24:00:00"
  if [[ $DO_SPINUP == "TRUE" ]] ; then
    SPINUP_CYCLEDEF="00 03-08,15-20 ${CYCLEDAY} ${CYCLEMONTH} 2021 *"
  fi
fi

FCST_LEN_HRS="0"
FCST_LEN_HRS_SPINUP="0"
POSTPROC_LEN_HRS="0"
POSTPROC_LONG_LEN_HRS="0"

for i in {0..23}; do FCST_LEN_HRS_CYCLES[$i]=0.0003; done
DA_CYCLE_INTERV="1" #need to be 1 to have hourly DA
RESTART_INTERVAL="1"

NCORES_RUN_ANAL=240
WTIME_RUN_ANAL="01:00:00"
HYBENSMEM_NMIN=66
HALO_BLEND=10
#LAYOUT_X="17"
#LAYOUT_Y="10"

if [[ -n $RESERVATION ]] ; then
  NNODES_MAKE_ICS="3"
  PPN_MAKE_ICS="20"
  NNODES_MAKE_LBCS="3"
  PPN_MAKE_LBCS="20"
  NNODES_RUN_POST="1"
  PPN_RUN_POST="40"
fi

WTIME_RUN_FCST="00:10:00" #normally 2 minutes is enough to generate dynf000.nc and phyf000.nc
WTIME_MAKE_LBCS="02:00:00"

EXTRN_MDL_NAME_ICS="FV3GFS"
EXTRN_MDL_NAME_LBCS="FV3GFS"

FV3GFS_FILE_FMT_ICS="grib2"
FV3GFS_FILE_FMT_LBCS="grib2"

envir="para"

NET="RTMA" ##must start with "RTMA". ${NET}.t${cyc}z.bgdawpf${fhr}.${tmmark}.grib2
TAG="RTMA_dev1" ## used by job names
IS_RTMA="TRUE"
NCORES_PER_NODE=40 #kjet
FG_ROOTDIR="/lfs4/BMC/nrtrr/NCO_dirs/nwges/para/RRFS_dev1" #only needed by RTMA
DT_ATMOS=1
MAXTRIES_RUN_FCST="3"
PYTHON_GRAPHICS_YML_FN="rtma.yml"

USE_CUSTOM_POST_CONFIG_FILE="TRUE"
TESTBED_FIELDS_FN="testbed_fields_rtma.txt"
CUSTOM_POST_CONFIG_FP="$(cd "$( dirname "${BASH_SOURCE[0]}" )/.." &>/dev/null&&pwd)/fix/upp/postxconfig-NT-fv3lam_rrfs.txt"
CUSTOM_POST_PARAMS_FP="$(cd "$( dirname "${BASH_SOURCE[0]}" )/.." &>/dev/null&&pwd)/fix/upp/params_grib2_tbl_new"
POST_FULL_MODEL_NAME="FV3RRTMA"
ARCHIVEDIR="/5year/BMC/wrfruc/rtma_dev1"
NCARG_ROOT="/apps/ncl/6.5.0-CentOS6.10_64bit_nodap_gnu447"
NCL_HOME="/home/rtrr/RTMA/graphics"
NCL_REGION="conus"
MODEL="RTMA_dev1" #used by NCL

#
# In NCO mode, the following don't need to be explicitly set to "FALSE" 
# in this configuration file because the experiment generation script
# will do this (along with printing out an informational message).
#
#RUN_TASK_MAKE_GRID="FALSE"
#RUN_TASK_MAKE_OROG="FALSE"
#RUN_TASK_MAKE_SFC_CLIMO="FALSE"

RUN="RTMA_dev1"
COMINgfs=""

STMP="/lfs4/BMC/nrtrr/NCO_dirs/stmp"  # Path to directory STMP that mostly contains input files.
PTMP="/lfs4/BMC/nrtrr/NCO_dirs/ptmp"  # Path to directory STMP that mostly contains input files.
NWGES="/lfs4/BMC/nrtrr/NCO_dirs/nwges"  # Path to directory NWGES that save boundary, cold initial, restart files

if [[ $DO_RETRO == "TRUE" ]] ; then
  CLEAN_OLDPROD_HRS="240"
  CLEAN_OLDLOG_HRS="240"
  CLEAN_OLDRUN_HRS="6"
  CLEAN_OLDFCST_HRS="6"
  CLEAN_OLDSTMPPOST_HRS="6"
  if [[ $LBCS_ICS_ONLY == "TRUE" ]]; then
    CLEAN_OLDRUN_HRS="7777"
    CLEAN_OLDFCST_HRS="7777"
  fi
else
  CLEAN_OLDPROD_HRS="72"
  CLEAN_OLDLOG_HRS="72"
  CLEAN_OLDRUN_HRS="12"
  CLEAN_OLDFCST_HRS="12"
  CLEAN_OLDSTMPPOST_HRS="24"
  CLEAN_NWGES_HRS="72"
fi

#
# In NCO mode, the user must manually (e.g. after doing the build step)
# create the symlink "${FIXrrfs}/fix_sar" that points to EMC's FIXLAM
# directory on the machine.  For example, on hera, the symlink's target
# needs to be
#
#   /scratch2/NCEPDEV/fv3-cam/emc.campara/fix_fv3cam/fix_sar
#
# The experiment generation script will then set FIXLAM to 
#
#   FIXLAM="${FIXrrfs}/fix_lam/${EMC_GRID_NAME}"
#
# where EMC_GRID_NAME has the value set above.
#

